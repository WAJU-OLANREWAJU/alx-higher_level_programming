Doctest cases for task 1 (2-matrix_divided.py)
===============================================

The 2-matrix_divided module takes two arguments(matrix and div)
The matrix is a list of lists that its elements must either be an int or a float
Each row of the list must be the same
argument passed to div must not be zero
All elements of the matrix should be divided by div, rounded to 2 decimal places
Returns new matrix

Edge Cases
==========

Importing function from the module:
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
	
	>>> matrix = [
	... [1, 2, 3],
	... [4, 5, 6]
	... ]

	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
	>>> matrix = [
	... [1, 2, 3, 4],
	... [5, 6, 7]
	... ]

        >>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
      	    ...
 	TypeError: Each row of the matrix must have the same size
	>>> matrix = [
        ... [1.3, 2.9, 3.5],
        ... [4, 5, 6]
        ... ]
	>>> matrix_divided(matrix, 5)
	[[0.26, 0.58, 0.7], [0.8, 1.0, 1.2]]
	>>> matrix = [
        ... [1, 2, 3],
        ... [4.3, 5.78, 6.986]
        ... ]
	>>> matrix_divided(matrix, 2)
	[[0.5, 1.0, 1.5], [2.15, 2.89, 3.49]]
	>>> matrix = [
        ... [1, 2, 3],
        ... [4, 5, 6]
        ... ]
	>>> matrix_divided(matrix, 4.676)
	[[0.21, 0.43, 0.64], [0.86, 1.07, 1.28]]
	>>> matrix = [
        ... [1, 2, 3],
        ... [4, 5, 6]
        ... ]
	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
            ...
        ZeroDivisionError: division by zero
	>>> matrix = [
        ... [1, 2.9, 3],
        ... [4, 5, 6.6548]
        ... ]
	>>> matrix_divided(matrix, 7)
	[[0.14, 0.41, 0.43], [0.57, 0.71, 0.95]]
	>>> matrix = [
        ... [1.98, 2.099, 3.5],
        ... [4.43589, 5.1, 6.6548]
        ... ]
	>>> matrix_divided(matrix, 10.878)
	[[0.18, 0.19, 0.32], [0.41, 0.47, 0.61]]
	>>> matrix = [
        ... [1.98, 2.099, 3.5],
        ... [4.43589, 5.1, 6.6548]
        ... ]
	>>> matrix_divided(matrix, 9)
	[[0.22, 0.23, 0.39], [0.49, 0.57, 0.74]]

	

